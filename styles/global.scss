@use 'sass:color';
@use 'sass:math';
@use 'breakpoint' as *;
@use 'theme' as *;
@use 'fonts' as *;
@use 'extensions' as *;

// Layout variables

$spacing-small: 1rem;
$spacing-large: 6rem;
$radius: 0.13rem;

// Top Level

:root {
    --color-font: #{$color-font-light};
    --color-font-gray: #737373;
    --color-primary: #{$color-primary-light};
    --color-primary-hover: #{$color-primary-hover-light};
    --color-secondary: #{$color-secondary};
    --color-secondary-hover: #{$color-secondary-hover};
    --color-surface: #{$color-surface-light};
    --color-surface-hover: #{$color-surface-hover-light};
    --color-comment: #{$color-comment-light};
    --spacing: #{$spacing-small};
    --radius: #{$radius};

    font-size: normal;
    line-height: 100%;
    font-family: Roboto, sans-serif;
    font-size: calc(100vw / 22);
    font-weight: 400;

    @include breakpoint(screen) {
        font-size: calc(100vw / 60);
        font-weight: 300;
        --spacing: #{$spacing-large};
    }

    @include breakpoint(omnivision) {
        // Computed size at 'omnivision'
        font-size: 22px;
    }

    @include theme(dark) {
        --color-font: #{$color-font-dark};
        --color-primary: #{$color-primary-dark};
        --color-primary-hover: #{$color-primary-hover-dark};
        --color-surface: #{$color-surface-dark};
        --color-surface-hover: #{$color-surface-hover-dark};
        --color-comment: #{$color-comment-dark};

        color: var(--color-font);
    }
}

body {
    --color-body: #{$color-body-light};

    @include theme(dark) {
        --color-body: #{$color-body-dark};
    }

    background-color: var(--color-body);
}

// Global

h1,
h2,
h3,
h4,
h5,
h6,
.h {
    text-rendering: optimizeLegibility;
    line-height: 1;
    color: #282828;

    @include theme(dark) {
        color: #d6d6d6;
    }

    a {
        color: var(--color-font);
    }
}

h1,
.h1 {
    font-size: 2.5em;
    font-weight: 700;
    letter-spacing: -0.02em;
}

h2,
.h2 {
    font-size: 2em;
    font-weight: 300;
    letter-spacing: -0.5px;
}

a,
.a {
    color: var(--color-primary);
    text-decoration: none;
    cursor: pointer;

    &:focus {
        color: var(--color-secondary);
    }

    &:hover {
        color: var(--color-primary-hover);
        border-color: var(--color-primary-hover);
        text-decoration: underline;
    }

    &.unstyled {
        color: var(--color-font) !important;
        text-decoration: none !important;
    }
}

b,
strong {
    font-weight: 600;
}

img {
    max-width: 100%;

    @include theme(dark) {
        // Recolorize photographic images in dark mode
        // @see https://web.dev/prefers-color-scheme/#re-colorize-and-darken-photographic-images
        &:not([src*='.svg']) {
            filter: grayscale(15%);
        }
    }
}

ul,
ol {
    padding-left: 1.5em;
}
ul ul,
ul ol,
ol ul,
ol ol {
    padding-left: 3em;
}

figure > img,
figure .figure {
    display: block;
    margin-right: auto;
    margin-left: auto;
}

figure figcaption {
    margin: 1em auto;
    text-align: center;
    font-style: italic;
    font-size: 0.9em;
}

@media (min-width: 330px) {
    figure.flex {
        display: flex;
        justify-content: center;
        flex-wrap: wrap;
    }
    figure.flex > .figure,
    figure.flex pre {
        flex: initial;
        margin-left: auto;
    }
    figure.flex > figcaption {
        flex: 1;
        text-align: right;
        padding-right: 1em;
    }
}

code,
tt {
    padding: 0.2em 0.4em;
    margin: 0;
    font-size: 85%;
    background-color: $pink;
    border-radius: 6px;
    white-space: pre-wrap;
    @include theme(dark) {
        background-color: $color-surface-dark;
    }
}

pre code,
tt {
    font-size: 0.85em;
    font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, monospace;
    white-space: pre;
    line-height: 1.2;
    background: unset;
    color: unset;
    border: none;
    padding: 0.1em;
}

pre code:before,
tt:before {
    content: counter(linenumbers);
    counter-increment: linenumbers;
    left: -3ex;
    position: absolute;
    text-align: right;
    width: 2.5ex;
}

kbd {
    display: inline-block;
    margin-bottom: 0.4em;
    padding: 1px 8px;
    border: #ccc 1px solid;
    color: #666;
    text-shadow: #fff 0 1px 0;
    font-size: 0.9em;
    font-weight: bold;
    background: #f4f4f4;
    border-radius: 4px;
    box-shadow: 0 1px 0 rgba(0, 0, 0, 0.2), 0 1px 0 0 #fff inset;
}

input,
button,
.input,
.button {
    outline: none;
    line-height: 2em;
    padding: 0 0.75rem;
    font-size: 1rem;
    font-weight: 300;
    color: var(--color-font);
    border: 0;
    border-radius: var(--radius);
    background-color: var(--color-surface);
    transition: all 0.3s ease;
    text-decoration: none !important;

    &:hover {
        box-shadow: var(--color-comment) 0px 0px 0px 1px;
    }

    &:focus {
        box-shadow: var(--color-comment) 0px 0px 0px 3px;
    }
}

select.input {
    padding-top: 0.5em;
    padding-bottom: 0.5em;
    font-size: 88%;
}

textarea.input {
    padding-top: 0.5em;
    padding-bottom: 0.5em;
    line-height: 1;
}

button,
.button {
    display: inline-flex;
    vertical-align: middle;
    align-items: center;
    cursor: pointer;
    background: transparent;

    svg {
        margin-right: 0.5em;
    }

    &:disabled {
        cursor: not-allowed;
        opacity: 0.75;
    }

    &.size-small {
        font-size: 80%;
    }

    &.size-large {
        font-size: 120%;
    }

    &.variant-text,
    &.variant-contained,
    &.variant-outlined,
    &.variant-link {
        &:hover {
            background: var(--color-surface);
        }
    }

    &.variant-text {
        &:hover:not(:focus) {
            box-shadow: none;
        }
    }

    &.variant-icon {
        padding: 0;
        box-shadow: none !important;
    }

    &.variant-contained {
        &.color-default {
            background: var(--color-surface);
            &:hover {
                background: var(--color-surface-hover);
            }
        }

        &.color-primary {
            background: var(--color-primary);
            color: white;
            &:hover {
                background: var(--color-primary-hover);
            }
        }

        &.color-secondary {
            background: var(--color-secondary);
            color: white;
            &:hover {
                background: var(--color-secondary-hover);
            }
        }

        &.color-red {
            background: $red;
            color: white;
        }

        &.color-green {
            background: $green;
            color: white;
        }
    }

    &.variant-outlined {
        line-height: calc(2em - 2px);
        border: 1px solid var(--color-comment);
    }

    &[data-loading='true'] {
        position: relative;
        overflow: hidden;
        cursor: wait;

        &::after {
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            content: '';
            position: absolute;
            animation: wave 1.6s linear 0.5s infinite;
            transform: translateX(-100%);
            background: linear-gradient(
                90deg,
                transparent,
                rgba(255, 255, 255, 0.15),
                transparent
            );
        }
    }
}

// Components

.alert {
    display: flex;
    align-items: center;
    gap: 0.5em;
    padding: 6px 16px;
    font-size: 0.875rem;
    font-weight: 400;
    line-height: 1.43;
    border-radius: var(--radius);
    letter-spacing: 0.01071em;
    background-color: var(--color-surface);
}
.alert__error {
    color: $red;
    background-color: $pink;
}

.card {
    @extend %card;
}

.chip {
    padding: 0.25rem 0.55rem;
    border: none;
    cursor: default;
    display: inline-flex;
    outline: 0;
    font-size: 0.65rem;
    font-weight: normal;
    line-height: 1;
    box-sizing: border-box;
    transition: background-color 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,
        box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
    align-items: center;
    white-space: nowrap;
    border-radius: 16px;
    vertical-align: middle;
    justify-content: center;
    text-decoration: none;
    overflow: hidden;
    text-overflow: ellipsis;
    background-color: var(--color-surface);

    &.color-primary {
        color: white;
        background-color: var(--color-primary);
    }

    &.color-secondary {
        color: white;
        background-color: var(--color-secondary);
    }
}

.loadingspinner,
.loadingspinner:after {
    --size: 48px;

    box-sizing: border-box;
    border-radius: 50%;
    width: var(--size);
    height: var(--size);
}
.loadingspinner {
    font-size: var(--size);
    position: relative;
    text-indent: -9999em;
    border: 0.15em solid rgba(255, 255, 255, 0.2);
    border-left-color: var(--color-font);
    transform: translateZ(0);
    animation: load 1.1s infinite linear;
}

.modal,
[data-reach-dialog-content] {
    width: 50vw;
    margin: 10vh auto;
    background: var(--color-surface);
    padding: 2rem;
    outline: none;

    .close-button {
        position: fixed;
        top: 1rem;
        right: 1rem;
        line-height: 0.6rem;
        font-size: 2rem;
    }
}

.overlay,
[data-reach-dialog-overlay] {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    overflow: auto;
    background: hsla(0, 0%, 100%, 0.8);
    @extend .fade-in;

    @include theme(dark) {
        background: hsla(0, 0%, 0%, 0.8);
    }

    &[hidden] {
        opacity: 0;
        height: 0;
        overflow: hidden;
    }
}

.popover,
[data-reach-popover] {
    margin-top: 1em;
    padding: 1em;
    border: 0;
    border-radius: 3px;
    background-color: var(--color-surface);
    box-shadow: 0 0 5px var(--color-surface) !important;
    outline: none !important;

    .current-nav,
    [data-current-nav] {
        background-color: $color-comment-light;
        color: var(--color-font);
    }
}

.surface {
    @extend %surface;
}

// Outline

#__next {
    > header,
    > section,
    > main,
    > footer {
        box-sizing: border-box;
        max-width: 1280px;
        margin: 0 auto;
        padding-right: var(--spacing);
        padding-left: var(--spacing);
    }

    > header {
        width: 100%;
        margin-top: var(--spacing);
        margin-bottom: var(--spacing);

        h1 {
        }

        nav {
        }
    }

    > main {
        line-height: 1.6;
    }

    > footer {
        position: relative;
        margin-top: $spacing-large;
        margin-bottom: $spacing-large;
        line-height: 1.6;

        nav ul {
            margin: 0;
            padding: 0;
            list-style-type: none;
            display: flex;

            li {
                margin: 0 1em 0 0;
                padding: 0;

                &:first-child {
                    font-weight: bold;
                }
            }
        }

        a.sourcecode {
            text-decoration: none;
            span {
                display: none;
                @extend .a;
                @include breakpoint(screen) {
                    display: unset;
                }
            }
        }
    }
}

#scroll-top {
    position: absolute;
    top: 0;
    right: var(--spacing);
    transition: transform 0.2s ease-in-out 0s;

    &:hover {
        transform: translateY(-10px);
    }

    svg {
        width: 1.5em;
        height: 1.5em;
    }

    @include breakpoint(omnivision) {
        right: unset;
        left: math.div($spacing-large, 2);
    }
}

// Animations

@keyframes fade-in {
    0% {
        opacity: 0;
    }
    100% {
        opacity: 1;
    }
}
.fade-in {
    animation: fade-in 0.5s ease;
}

@keyframes load {
    0% {
        -webkit-transform: rotate(0deg);
        transform: rotate(0deg);
    }
    100% {
        -webkit-transform: rotate(360deg);
        transform: rotate(360deg);
    }
}

@keyframes wave {
    0% {
        transform: translateX(-100%);
    }
    60% {
        transform: translateX(100%);
    }
    100% {
        transform: translateX(100%);
    }
}

// Other

.text-label {
    color: var(--color-font-gray);
    text-transform: uppercase;
    font-size: 0.65em;
    letter-spacing: 0.08em;
    font-weight: 400;
}
